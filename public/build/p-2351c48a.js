import{A as r}from"./p-811a61b7.js";const t=new class{async getPaymentIntent(t){let o=[];Object.keys(t).forEach(r=>{o.push(encodeURIComponent(r)+"="+encodeURIComponent(t[r]))});const e=`${r.getAPIUrl()}/booking/payment_intent?${o.join("&")}`;try{let t=await fetch(e,{headers:r.getHeaders()});const o=await t.json();if(!t.ok){if(o&&o.errors){const r=[];throw Object.keys(o.errors).forEach(t=>r.push(o.errors[t][0])),new Error(r.join("\n"))}if(o&&o.message)throw new Error(o.message);throw new Error(t.statusText)}return o}catch(r){throw new Error(r.message)}}async checkoutACH(t,o,e){try{const n=Object.assign(Object.assign({},t),{token:o,account_id:e});let w=await fetch(`${r.getAPIUrl()}/booking/checkout_ach`,{method:"POST",headers:r.getHeaders(),body:JSON.stringify(n)});const a=await w.json();if(!w.ok){if(a&&a.errors){const r=[];throw Object.keys(a.errors).forEach(t=>r.push(a.errors[t])),new Error(r.join("\n"))}if(a&&a.message)throw new Error(a.message);throw new Error(w.statusText)}return a}catch(r){throw new Error(r.message)}}async sendReferral(t){try{const o=await fetch(`${r.getAPIUrl()}/booking/referral`,{method:"POST",headers:r.getHeaders(),body:JSON.stringify(t)}),e=await o.json();if(!o.ok){if(e&&e.errors){const r=[];throw Object.keys(e.errors).forEach(t=>r.push(e.errors[t])),new Error(r.join("\n"))}if(e&&e.message)throw new Error(e.message);throw new Error(o.statusText)}return e}catch(r){throw new Error(r.message)}}async shareListing(t){try{const o=await fetch(`${r.getAPIUrl()}/booking/share_apartment`,{method:"POST",headers:r.getHeaders(),body:JSON.stringify(t)}),e=await o.json();if(!o.ok){if(e&&e.errors){const r=[];throw Object.keys(e.errors).forEach(t=>r.push(e.errors[t])),new Error(r.join("\n"))}if(e&&e.message)throw new Error(e.message);throw new Error(o.statusText)}return e}catch(r){throw new Error(r.message)}}async sendInquiry(t){try{const o=await fetch(`${r.getAPIUrl()}/booking/inquiry`,{method:"POST",headers:r.getHeaders(),body:JSON.stringify(t)}),e=await o.json();if(!o.ok){if(e&&e.errors){const r=[];throw Object.keys(e.errors).forEach(t=>r.push(e.errors[t])),new Error(r.join("\n"))}if(e&&e.message)throw new Error(e.message);throw new Error(o.statusText)}return e}catch(r){throw new Error(r.message)}}async updatePassword(t){try{const o=await fetch(`${r.getAPIUrl()}/admin/booking/set_password`,{method:"POST",headers:r.getHeaders(),body:JSON.stringify(t)}),e=await o.json();if(!o.ok){if(e&&e.errors){const r=[];throw Object.keys(e.errors).forEach(t=>r.push(e.errors[t])),new Error(r.join("\n"))}if(e&&e.message)throw new Error(e.message);throw new Error(o.statusText)}return e}catch(r){throw new Error(r.message)}}async checkPassword(t){try{const o=await fetch(`${r.getAPIUrl()}/booking/check_password`,{method:"POST",headers:r.getHeaders(),body:JSON.stringify(t)}),e=await o.json();if(!o.ok){if(e&&e.errors){const r=[];throw Object.keys(e.errors).forEach(t=>r.push(e.errors[t])),new Error(r.join("\n"))}if(e&&e.message)throw new Error(e.message);throw new Error(o.statusText)}return e}catch(r){throw new Error(r.message)}}};export{t as A};